jobs:

- job: Windows

  pool:
    vmImage: 'windows-2019'

  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget
    NUGET_HTTP_CACHE_PATH: $(Agent.WorkFolder)\.nuget-http-cache

  steps:
  - checkout: self
    clean: true

  - template: gitversion-step.yml

  - task: UseDotNet@2
    displayName: 'Use .NET 5 SDK'
    inputs:
      version: 5.x

  - task: UseDotNet@2
    displayName: 'Use .NET 7 SDK'
    inputs:
      version: 7.0.100-rc.2.22477.23
      includePreviewVersions: true

  - powershell: |
      dotnet build /r /p:Configuration=Release src/SQLitePCLRaw.Wasm-ci.slnf "/p:PackageOutputPath=$(build.artifactstagingdirectory)\nuget" "/p:PackageVersion=$env:GITVERSION_FullSemVer" "/p:InformationalVersion=$env:GITVERSION_InformationalVersion" /detailedsummary
  
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: uno.sqlitepclwasmprovider-drop
      publishLocation: Container

- job: Linux
  container: unoplatform/wasm-build:3.0

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    DotnetRuntimePath: /usr/share/dotnet

  steps:
  - checkout: self
    clean: true

  - template: gitversion-step.yml

  - task: UseDotNet@2
    displayName: 'Use .NET 5 SDK'
    inputs:
      version: 5.x

  - task: UseDotNet@2
    displayName: 'Use .NET 7 SDK'
    inputs:
      version: 7.0.100-rc.2.22477.23
      includePreviewVersions: true

  - bash: |
      dotnet msbuild /r /p:Configuration=Release "/p:PackageOutputPath=$(build.artifactstagingdirectory)\nuget" "/p:PackageVersion=$GITVERSION_FULLSEMVER" "/p:InformationalVersion=$GITVERSION_INFORMATIONALVERSION" ./src/samples/EFCoreSample/EFCoreSample.Wasm/EFCoreSample.Wasm.csproj

    displayName: 'Build Wasm Head'

  - task: PublishBuildArtifacts@1
    displayName: Publish Package Artifacts
    inputs:
      pathToPublish: ./src/samples/EFCoreSample/EFCoreSample.Wasm/bin/Release/net7.0/dist
      artifactType: container
      artifactName: EFCoreSample-Wasm